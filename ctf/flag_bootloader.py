# Obfuscated byte array
si = [0x77, 0x21, 0x67, 0x30, 0x60, 0x35, 0x0c, 0x0c, 0x78, 0x79, 0x2e,
      0x2e, 0x20, 0x72, 0x70, 0x75, 0x29, 0x2b, 0x00, 0x5c, 0x21, 0x70,
      0x62, 0x63, 0x65, 0x60, 0x07, 0x0d, 0x06, 0x02, 0x3b, 0x3b]

# XOR-shift function
def xs(al, si, c):
    si[c] ^= al
    si[c+1] ^= al
    return c + 2

# Sequence of decoding steps
c = 0
c = xs(0x4b ^ 0x0c, si, c)
c = xs(0x53 ^ 0x06, si, c)
c = xs(0x58 - 0x01, si, c)
c = xs(0x62 - 0x29, si, c)
c = xs(0x68 ^ 0x23, si, c)
c = xs(0x4b ^ 0x00, si, c)
c = xs(0x62 - 0x1e, si, c)
c = xs(0x4d - 0x0b, si, c)
c = xs(0x45 ^ 0x0d, si, c)
c = xs(0x10 ^ 0x28, si, c)
c = xs(0x58 ^ 0x1d, si, c)
c = xs(0x7a ^ 0x28, si, c)
c = xs(0x65 - 0x13, si, c)
c = xs(0x33 ^ 0x07, si, c)
c = xs(0x25 ^ 0x15, si, c)
c = xs(0x4c + 0x0c, si, c)

# Construct and print the flag
flag = ''.join(chr(i) for i in si)
print(f'247CTF{{{flag}}}')
